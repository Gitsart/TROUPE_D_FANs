#include<MobaTools.h>
#include <Servo.h>
const byte stepPin =3;
const byte dirPin =4;

#define limitPin 10
#define startPin 9

const int stepsperRev = 200;

int startPos = 0;

long  nextPos;
const long targetPos =1200;

int limit_count =0;

bool limswitch =0;

int hOme =0;
int sTart =0;

MoToStepper stepper1(stepsperRev, STEPDIR);
Servo myservo;
MoToTimer stepperPause;

bool stepperRunning;

void setup() {
  Serial.begin(9600);
  stepper1.attach(stepPin,dirPin);
  myservo.attach(12);
  stepper1.setRampLen(200);


  pinMode(limitPin, INPUT_PULLUP);
  pinMode(startPin, INPUT_PULLUP);
  homing();
  stepperRunning = true;
}

void loop() {
    while(digitalRead(startPin)==LOW)
    {sTart =1;}

    
    if((hOme ==1)&& (limit_count>0)&&(count ==0)&&(sTart ==1))
  {
    stepper1.setSpeed(2000);
    motor();
    SErvo();
  }
}

void homing() {
  stepper1.setSpeed(1400);
  while(digitalRead(limitPin) != HIGH && limit_count==0) { stepper1.rotate(1);Serial.print(limswitch);Serial.println("Finding END");}

  if(digitalRead(limitPin) == HIGH && limit_count ==0) {stepper1.stop();Serial.println("END POSITION");limit_count+=1;limswitch=HIGH;hOme =1;}
  Serial.print("limit_count:");Serial.println(limit_count);
  Serial.print("limswitch:");Serial.println(limswitch);
  Serial.print("hOme:");Serial.println(hOme);
  delay(2000);
  }

void motor() {

  if ( stepperRunning ) {
    // Wait till stepper has reached target, then set pause time
    if ( !stepper1.moving() ) {
      // stepper has reached target, start pause
      stepperPause.setTime( 1000 );
      stepperRunning = false;
    }
  } else {
    // stepper doesn't move, wait till stepperPause time expires
    if ( stepperPause.expired() ) {
      // stepperPause time expired. Start stepper in opposite direction
      if ( nextPos == 0 ) {
        nextPos = targetPos;
      } else {
        nextPos = 0;
      }
      stepper1.moveTo(-nextPos );
      stepperRunning = true;
    }
  }
}

void SErvo() {
  for (pos = startPos; pos <= 80; pos += 1) { // goes from 0 degrees to 90 degrees
    // in steps of 1 degree
    myservo.write(pos);              // tell servo to go to position in variable 'pos'
    delay(30);                       // waits 15 ms for the servo to reach the position
  }
  delay(100);
  for (pos = 80; pos >= startPos; pos -= 1) { // goes from 90 degrees to 0 degrees
    myservo.write(pos);              // tell servo to go to position in variable 'pos'
    delay(30);                       // waits 15 ms for the servo to reach the position
  }
  delay(100);
}
